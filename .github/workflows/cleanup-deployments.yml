name: Cleanup Deployments

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sunday

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Delete inactive deployments
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: deployments } = await github.rest.repos.listDeployments({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            for (const deployment of deployments) {
              // Delete deployment statuses first
              const { data: statuses } = await github.rest.repos.listDeploymentStatuses({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: deployment.id,
              });
              
              for (const status of statuses) {
                try {
                  await github.rest.repos.createDeploymentStatus({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    deployment_id: deployment.id,
                    state: 'inactive',
                  });
                } catch (error) {
                  console.log(`Failed to update status for deployment ${deployment.id}: ${error.message}`);
                }
              }
              
              // Delete the deployment
              try {
                await github.rest.repos.deleteDeployment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  deployment_id: deployment.id,
                });
                console.log(`Deleted deployment ${deployment.id}`);
              } catch (error) {
                console.log(`Failed to delete deployment ${deployment.id}: ${error.message}`);
              }
            }
